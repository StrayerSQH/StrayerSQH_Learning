DATA SEGMENT
MAXLEN DB 20
INPTLEN DB 0
STR1 DB 10 DUP(0)
STR2 DB 10 DUP(0)
DATA END

STACK SEGMENT STACK
DW 40H DUP(?)
STACK END

CODE SEGMENT
ASSUME DS:DATA, CS:CODE, SS:STACK
MAINP:MOV AX, DATA
      MOV DS, AX
      LEA DX, MAXLEN
      MOV AH, 0AH
      INT 21H
      MOV CX, 0
      LEA SI, STR1
      LEA DI, STR2
      CALL OPERATION
      CMP INPTLEN, 0
      JZ L0
      CALL CHANHECH
      JMP OUTPUT

 L0: MOV BYTE PTR [DI], ¡®?¡¯
     MOV BYTE PTR [DI+1], ¡®$¡¯

OUTPUT:MOV DL, 0DH
       MOV AH, 02H
       INT 21H
       MOV DL, 0AH
       MOV AH, 02H
       INT 21H
       LEA DX, STR2
       MOV AH, 09H
       INT 21H
       MOV AH, 4CH
       INT 21H

OPERATION PROC
      PUSH DI
      PUSH SI
      PUSH AX
      PUSH CX
      MOV CX, INRTLEN
      LOP: CMP BYTE PTR [SI], 39H
           JA, L2
           DEC INPTLEN
           JUMP L3
L2:MOV AL, [SI]
         MOV [DI], AL
         INC DI
L3:INC SI
LOOP LOP
POP CX
POP AX
POP SI
POP DI
RET 
OPERATION ENDP

CHANGECH PROC
    PUSH CX
    PUSH DI
    MOV CL, INPTLEN
    LOP1:CMP BYTE PTR [DI], 61H
         JAE L4
         JMP L5
L4:CMP BYTE PTR [DI], 7AH
   JA L2
   SUB BYTE PTR [DI], 20H
L2:MOV AL, [SI]
   MOV [DI], AL
   INC DI
L5:INC DI
   LOOP LOP1
   MOV BYTE PTR [DI], ¡®$¡¯
   POP DI
   POP CX
   RET
   CHANGECH END
CODE END
END MAIN

